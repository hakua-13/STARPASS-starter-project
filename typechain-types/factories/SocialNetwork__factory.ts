/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { SocialNetwork, SocialNetworkInterface } from "../SocialNetwork";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "posterAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "TweetPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "postId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLike",
        type: "bool",
      },
    ],
    name: "likeToggled",
    type: "event",
  },
  {
    inputs: [],
    name: "getLastPostId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "getPost",
    outputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalLikes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "likedTweet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "post",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tweetDataMap",
    outputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalLike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "posterAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_postId",
        type: "uint256",
      },
    ],
    name: "unlike",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109f0806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639cc9e26a1161005b5780639cc9e26a146100d5578063a0d96b6f146100f8578063d5ccb90914610136578063e82935da1461014757600080fd5b806340731c241461008257806374d21ae0146100ad5780638ee93cf3146100c2575b600080fd5b61009561009036600461064e565b61015a565b6040516100a4939291906106ad565b60405180910390f35b6100c06100bb36600461064e565b6102e1565b005b6100c06100d03660046106e8565b6103c6565b6100e86100e336600461064e565b6104b0565b6040516100a49493929190610799565b6101266101063660046107d1565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100a4565b6000546040519081526020016100a4565b6100c061015536600461064e565b61056b565b6060600080610193604051806080016040528060608152602001600081526020016000815260200160006001600160a01b031681525090565b600054808611156101eb5760405162461bcd60e51b815260206004820152600f60248201527f6e6f6e206578697374656e74206964000000000000000000000000000000000060448201526064015b60405180910390fd5b6000868152600160205260409081902081516080810190925280548290829061021390610809565b80601f016020809104026020016040519081016040528092919081815260200182805461023f90610809565b801561028c5780601f106102615761010080835404028352916020019161028c565b820191906000526020600020905b81548152906001019060200180831161026f57829003601f168201915b5050509183525050600182015460208083019190915260028301546040808401919091526003909301546001600160a01b03166060909201919091528251908301519290910151909891975095509350505050565b33600090815260026020908152604080832084845290915290205460ff1661034b5760405162461bcd60e51b815260206004820152600e60248201527f6469646e2774206c696b652e2e2e00000000000000000000000000000000000060448201526064016101e2565b3360009081526002602090815260408083208484528252808320805460ff1916905560019182905282200180549161038283610859565b9091555050604080518281526000602082015233917ffdcb5f1896b2129da991ef60d116c547d9025cc2d50c293ccf4137451f0583e991015b60405180910390a250565b6000805460408051608081018252848152602080820185905242828401523360608301528385526001905292208251919291819061040490826108bf565b506020820151600182015560408201516002820155606090910151600390910180546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055610469600080546001019055565b336001600160a01b03167f79365ad4f87bfb12e1f7390d6e6128c39800a8d6b51bdea21fdf11520480a88783426040516104a492919061097f565b60405180910390a25050565b6001602052600090815260409020805481906104cb90610809565b80601f01602080910402602001604051908101604052809291908181526020018280546104f790610809565b80156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b5050505060018301546002840154600390940154929390929091506001600160a01b031684565b33600090815260026020908152604080832084845290915290205460ff16156105d65760405162461bcd60e51b815260206004820152600d60248201527f616c7265616479206c696b65640000000000000000000000000000000000000060448201526064016101e2565b3360009081526002602090815260408083208484528252808320805460ff1916600190811790915591829052822001805491610611836109a1565b9091555050604080518281526001602082015233917ffdcb5f1896b2129da991ef60d116c547d9025cc2d50c293ccf4137451f0583e991016103bb565b60006020828403121561066057600080fd5b5035919050565b6000815180845260005b8181101561068d57602081850181015186830182015201610671565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006106c06060830186610667565b60208301949094525060400152919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156106fa57600080fd5b813567ffffffffffffffff8082111561071257600080fd5b818401915084601f83011261072657600080fd5b813581811115610738576107386106d2565b604051601f8201601f19908116603f01168101908382118183101715610760576107606106d2565b8160405282815287602084870101111561077957600080fd5b826020860160208301376000928101602001929092525095945050505050565b6080815260006107ac6080830187610667565b60208301959095525060408101929092526001600160a01b0316606090910152919050565b600080604083850312156107e457600080fd5b82356001600160a01b03811681146107fb57600080fd5b946020939093013593505050565b600181811c9082168061081d57607f821691505b60208210810361083d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008161086857610868610843565b506000190190565b601f8211156108ba57600081815260208120601f850160051c810160208610156108975750805b601f850160051c820191505b818110156108b6578281556001016108a3565b5050505b505050565b815167ffffffffffffffff8111156108d9576108d96106d2565b6108ed816108e78454610809565b84610870565b602080601f831160018114610922576000841561090a5750858301515b600019600386901b1c1916600185901b1785556108b6565b600085815260208120601f198616915b8281101561095157888601518255948401946001909101908401610932565b508582101561096f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006109926040830185610667565b90508260208301529392505050565b6000600182016109b3576109b3610843565b506001019056fea26469706673582212202d8e9749719870c90568902e59bc806580b63095c8de1e961bc61a782351fc4464736f6c63430008110033";

type SocialNetworkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SocialNetworkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SocialNetwork__factory extends ContractFactory {
  constructor(...args: SocialNetworkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SocialNetwork> {
    return super.deploy(overrides || {}) as Promise<SocialNetwork>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SocialNetwork {
    return super.attach(address) as SocialNetwork;
  }
  override connect(signer: Signer): SocialNetwork__factory {
    return super.connect(signer) as SocialNetwork__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SocialNetworkInterface {
    return new utils.Interface(_abi) as SocialNetworkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SocialNetwork {
    return new Contract(address, _abi, signerOrProvider) as SocialNetwork;
  }
}
